<?xml version="1.0" encoding="utf-8"?>
<resources>
    <bool name="config_enableBurnInProtection">true</bool>

    <dimen name="status_bar_height_default">128px</dimen>
    <dimen name="status_bar_height">128px</dimen>
    <dimen name="status_bar_height_portrait">128px</dimen>
    <dimen name="status_bar_height_landscape">28dp</dimen>
    <dimen name="quick_qs_offset_height">128px</dimen>

    <integer name="config_screenBrightnessSettingMinimum">1</integer>

    <string name="config_mainBuiltInDisplayCutout">M -34,0 L -34,98 L 34,98 L 34,0 Z</string>
    <string name="config_mainBuiltInDisplayCutoutRectApproximation">M -34,0 L -34,98 L 34,98 L 34,0 Z</string>

    <!--Whether the display cutout region of the main built-in display should be forced to
        black in software (to avoid aliasing or emulate a cutout that is not physically existent).
        -->
    <bool name="config_fillMainBuiltInDisplayCutout">false</bool>

    <!-- Flag indicating whether we should enable the automatic brightness.
         Software implementation will be used if config_hardware_auto_brightness_available is not set -->
    <bool name="config_automatic_brightness_available">true</bool>

    <!-- If this is true, the screen will come on when you unplug usb/power/whatever. -->
    <bool name="config_unplugTurnsOnScreen">true</bool>

    <!-- Is the device capable of hot swapping an UICC Card -->
    <bool name="config_hotswapCapable">true</bool>

    <!-- Screen brightness used to dim the screen while dozing in a very low power state.
         May be less than the minimum allowed brightness setting
         that can be set by the user. -->
    <integer name="config_screenBrightnessDoze">17</integer>

    <!-- Minimum screen brightness setting allowed by power manager.
         -2 is invalid so setting will resort to int value specified above.
         Set this to 0.0 to allow screen to go to minimal brightness.
         The user is forbidden from setting the brightness below this level. -->
    <item format="float" name="config_screenBrightnessSettingMinimumFloat" type="dimen">0</item>

    <!-- Maximum screen brightness allowed by the power manager.
         -2 is invalid so setting will resort to int value specified above.
         Set this to 1.0 for maximum brightness range.
         The user is forbidden from setting the brightness above this level. -->
    <item format="float" name="config_screenBrightnessSettingMaximumFloat" type="dimen">1</item>

    <!-- Default screen brightness setting set.
         -2 is invalid so setting will resort to int value specified above.
         Must be in the range specified by minimum and maximum. -->
    <item format="float" name="config_screenBrightnessSettingDefaultFloat" type="dimen">0.5</item>
    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">1000</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">1000</integer>

    <!-- The maximum range of gamma adjustment possible using the screen
         auto-brightness adjustment setting. -->
    <fraction name="config_autoBrightnessAdjustmentMaxGamma">100.0%</fraction>

    <!-- Array of light sensor lux values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)

         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux

         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if lux == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).

         Spline interpolation is used to determine the auto-brightness
         backlight values for lux levels between these control points.

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>2</item>
        <item>4</item>
        <item>6</item>
        <item>8</item>
        <item>10</item>
        <item>15</item>
        <item>20</item>
        <item>25</item>
        <item>30</item>
        <item>35</item>
        <item>40</item>
        <item>45</item>
        <item>50</item>
        <item>55</item>
        <item>60</item>
        <item>65</item>
        <item>70</item>
        <item>75</item>
        <item>80</item>
        <item>85</item>
        <item>90</item>
        <item>95</item>
        <item>100</item>
        <item>120</item>
        <item>140</item>
        <item>160</item>
        <item>180</item>
        <item>200</item>
        <item>220</item>
        <item>240</item>
        <item>260</item>
        <item>280</item>
        <item>300</item>
        <item>320</item>
        <item>340</item>
        <item>360</item>
        <item>380</item>
        <item>400</item>
        <item>420</item>
        <item>440</item>
        <item>460</item>
        <item>480</item>
        <item>500</item>
        <item>700</item>
        <item>900</item>
        <item>1100</item>
        <item>1300</item>
        <item>1500</item>
        <item>1700</item>
        <item>1900</item>
        <item>2000</item>
        <item>2500</item>
        <item>3000</item>
        <item>3500</item>
        <item>4000</item>
        <item>4500</item>
        <item>5000</item>
        <item>5500</item>
        <item>6000</item>
        <item>6500</item>
        <item>7000</item>
        <item>7500</item>
        <item>8000</item>
        <item>8500</item>
        <item>9000</item>
        <item>9500</item>
        <item>10000</item>
        <item>10500</item>
        <item>11000</item>
        <item>11500</item>
        <item>12000</item>
        <item>12500</item>
        <item>13000</item>
        <item>13500</item>
        <item>14000</item>
        <item>14500</item>
        <item>15000</item>
        <item>16000</item>
        <item>17000</item>
        <item>18000</item>
        <item>19000</item>
        <item>20000</item>
        <item>21000</item>
        <item>22000</item>
        <item>23000</item>
        <item>24000</item>
        <item>25000</item>
        <item>26000</item>
        <item>27000</item>
        <item>28000</item>
        <item>29000</item>
        <item>30000</item>
        <item>35000</item>
        <item>40000</item>
        <item>45000</item>
        <item>50000</item>
        <item>55000</item>
        <item>60000</item>
        <item>65000</item>
        <item>70000</item>
        <item>75000</item>
        <item>80000</item>
        <item>85000</item>
        <item>90000</item>
        <item>95000</item>
        <item>100000</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the lux values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         The brightness values must be between 0 and 255 and be non-decreasing.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues" />

    <!-- Array of desired screen brightness in nits corresponding to the lux values
         in the config_autoBrightnessLevels array. The display brightness is defined as the measured
         brightness of an all-white image.

         If this is defined then:
            - config_autoBrightnessLcdBacklightValues should not be defined
            - config_screenBrightnessNits must be defined
            - config_screenBrightnessBacklight must be defined

         This array should have size one greater than the size of the config_autoBrightnessLevels
         array. The brightness values must be non-negative and non-decreasing. This must be
         overridden in platform specific overlays -->
    <array name="config_autoBrightnessDisplayValuesNits">
        <item>2.0</item>
        <item>2.5</item>
        <item>2.8</item>
        <item>16.3</item>
        <item>26.2</item>
        <item>32.0</item>
        <item>36.9</item>
        <item>49.4</item>
        <item>63.7</item>
        <item>82.5</item>
        <item>89.9</item>
        <item>91.6</item>
        <item>91.6</item>
        <item>91.6</item>
        <item>93.0</item>
        <item>93.0</item>
        <item>93.0</item>
        <item>94.6</item>
        <item>94.6</item>
        <item>95.7</item>
        <item>95.7</item>
        <item>95.7</item>
        <item>95.7</item>
        <item>97.2</item>
        <item>97.2</item>
        <item>98.4</item>
        <item>101.2</item>
        <item>102.2</item>
        <item>103.8</item>
        <item>106.3</item>
        <item>107.7</item>
        <item>110.2</item>
        <item>111.6</item>
        <item>114.0</item>
        <item>115.2</item>
        <item>116.5</item>
        <item>120.4</item>
        <item>121.1</item>
        <item>122.6</item>
        <item>125.3</item>
        <item>126.5</item>
        <item>128.7</item>
        <item>129.6</item>
        <item>132.1</item>
        <item>134.0</item>
        <item>156.3</item>
        <item>174.4</item>
        <item>193.5</item>
        <item>223.4</item>
        <item>252.0</item>
        <item>290.1</item>
        <item>315.4</item>
        <item>332.4</item>
        <item>404.2</item>
        <item>433.1</item>
        <item>446.1</item>
        <item>460.9</item>
        <item>474.8</item>
        <item>488.7</item>
        <item>500.0</item>
        <item>500.0</item>
        <item>512.5</item>
        <item>525.0</item>
        <item>537.5</item>
        <item>550.0</item>
        <item>562.5</item>
        <item>575.0</item>
        <item>587.5</item>
        <item>600.0</item>
        <item>610.0</item>
        <item>620.0</item>
        <item>630.0</item>
        <item>640.0</item>
        <item>650.0</item>
        <item>660.0</item>
        <item>670.0</item>
        <item>680.0</item>
        <item>690.0</item>
        <item>700.0</item>
        <item>705.0</item>
        <item>710.0</item>
        <item>715.0</item>
        <item>720.0</item>
        <item>725.0</item>
        <item>730.0</item>
        <item>735.0</item>
        <item>740.0</item>
        <item>745.0</item>
        <item>750.0</item>
        <item>755.0</item>
        <item>760.0</item>
        <item>765.0</item>
        <item>770.0</item>
        <item>775.0</item>
        <item>800.0</item>
        <item>816.7</item>
        <item>833.3</item>
        <item>850.0</item>
        <item>866.7</item>
        <item>883.3</item>
        <item>900.0</item>
        <item>914.3</item>
        <item>928.6</item>
        <item>942.9</item>
        <item>957.1</item>
        <item>971.4</item>
        <item>985.7</item>
        <item>1000.0</item>
    </array>

    <!-- An array describing the screen's backlight values corresponding to the brightness
         values in the config_screenBrightnessNits array.

         This array should be equal in size to config_screenBrightnessBacklight. -->
    <integer-array name="config_screenBrightnessBacklight">
        <item>1</item>
        <item>255</item>
    </integer-array>

    <!-- An array of floats describing the screen brightness in nits corresponding to the backlight
         values in the config_screenBrightnessBacklight array.  On OLED displays these  values
         should be measured with an all white image while the display is in the fully on state.
         Note that this value should *not* reflect the maximum brightness value for any high
         brightness modes but only the maximum brightness value obtainable in a sustainable manner.

         This array should be equal in size to config_screenBrightnessBacklight -->
    <array name="config_screenBrightnessNits">
        <item>2.0</item>
        <item>850.0</item>
    </array>

    <!-- Array of ambient lux threshold values. This is used for determining hysteresis constraint
         values by calculating the index to use for lookup and then setting the constraint value
         to the corresponding value of the array. The new brightening hysteresis constraint value
         is the n-th element of config_ambientBrighteningThresholds, and the new darkening
         hysteresis constraint value is the n-th element of config_ambientDarkeningThresholds.

         The (zero-based) index is calculated as follows: (MAX is the largest index of the array)
         condition                       calculated index
         value < level[0]                0
         level[n] <= value < level[n+1]  n+1
         level[MAX] <= value             MAX+1 -->
    <integer-array name="config_ambientThresholdLevels">
        <item>2</item>
        <item>10</item>
        <item>30</item>
        <item>100</item>
        <item>800</item>
        <item>2000</item>
        <item>4000</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_ambientThresholdLevels. The brightening threshold is calculated as
         lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold,
         the screen brightness is recalculated. See the config_ambientThresholdLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_ambientBrighteningThresholds">
        <item>2</item>
        <item>6</item>
        <item>10</item>
        <item>30</item>
        <item>100</item>
        <item>400</item>
        <item>600</item>
        <item>1000</item>
    </integer-array>

    <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_ambientThresholdLevels. The darkening threshold is calculated as
         lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold,
         the screen brightness is recalculated. See the config_ambientThresholdLevels
         description for how the constraint value is chosen. -->
    <integer-array name="config_ambientDarkeningThresholds">
        <item>800</item>
        <item>800</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
        <item>500</item>
    </integer-array>

     <!-- Minimum allowable screen brightness to use in a very dark room.
          This value sets the floor for the darkest possible auto-brightness
          adjustment.  It is expected to be somewhat less than the first entry in
          config_autoBrightnessLcdBacklightValues so as to allow the user to have
          some range of adjustment to dim the screen further than usual in very
          dark rooms. The contents of the screen must still be clearly visible
          in darkness (although they may not be visible in a bright room). -->
     <integer name="config_screenBrightnessDark">1</integer>

     <!-- The display uses different gamma curves for different refresh rates. It's hard for panel
         vendor to tune the curves to have exact same brightness for different refresh rate. So
         flicker could be observed at switch time. The issue is worse at the gamma lower end.
         In addition, human eyes are more sensitive to the flicker at darker environment.
         To prevent flicker, we only support higher refresh rates if the display brightness is above
         a threshold. And the darker environment could have higher threshold.
         For example, no higher refresh rate if
         display brightness <= disp0 && ambient brightness <= amb0
         || display brightness <= disp1 && ambient brightness <= amb1
    -->
    <integer-array name="config_brightnessThresholdsOfPeakRefreshRate">
        <item>10</item> <!-- 33% UI brightness -->
        <item>14</item> <!-- 40% UI brightness -->
    </integer-array>
    <integer-array name="config_ambientThresholdsOfPeakRefreshRate">
        <item>-1</item>
        <item>20</item>
    </integer-array>

    <!-- Default refresh rate in the zone defined by brightness and ambient thresholds.
         If non-positive, then the refresh rate is unchanged even if thresholds are configured. -->
    <integer name="config_defaultRefreshRateInZone">120</integer>

    <!-- Corner radii for that good old Pixel look. -->
	<dimen name="config_bottomDialogCornerRadius">16dp</dimen>
    <dimen name="config_buttonCornerRadius">4dp</dimen>
    <dimen name="config_dialogCornerRadius">28dp</dimen>

    <!-- The default journal mode to use use when Write-Ahead Logging is not active.
         Choices are: OFF, DELETE, TRUNCATE, PERSIST and MEMORY.
         PERSIST may improve performance by reducing how often journal blocks are
         reallocated (compared to truncation) resulting in better data block locality
         and less churn of the storage media.
         The PERSIST mode results in data persisting in the journal beyond the life of
         a transaction, so it interacts poorly with SECURE_DELETE. -->
    <string name="db_default_journal_mode" translatable="false">PERSIST</string>

	<!-- The database synchronization mode when using the default journal mode.
         FULL is safest and preserves durability at the cost of extra fsyncs.
         NORMAL also preserves durability in non-WAL modes and uses checksums to ensure
         integrity although there is a small chance that an error might go unnoticed.
         Choices are: FULL, NORMAL, OFF. -->
    <string name="db_default_sync_mode" translatable="false">OFF</string>

	<!-- The database synchronization mode when using Write-Ahead Logging.
         From https://www.sqlite.org/pragma.html#pragma_synchronous:
         WAL mode is safe from corruption with synchronous=NORMAL, and probably DELETE mode is safe
         too on modern filesystems. WAL mode is always consistent with synchronous=NORMAL, but WAL
         mode does lose durability. A transaction committed in WAL mode with
         synchronous=NORMAL might roll back following a power loss or system crash.
         Transactions are durable across application crashes regardless of the synchronous setting
         or journal mode. The synchronous=NORMAL setting is a good choice for most applications
         running in WAL mode.
         Choices are: FULL, NORMAL, OFF. -->
    <string name="db_wal_sync_mode" translatable="false">OFF</string>

	<!-- If this is true, device supports Sustained Performance Mode. -->
    <bool name="config_sustainedPerformanceModeSupported">true</bool>

</resources>